# Generated by: python acalcout.py > mod1_calc_outputs.db

record(acalcout, "DL:ZaPHDVac:Waveform:Slice000:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){0,0}+ARR(B){1,1}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3200:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3201:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice001:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){2,2}+ARR(B){3,3}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3202:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3203:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice002:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){4,4}+ARR(B){5,5}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3204:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3205:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice003:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){6,6}+ARR(B){7,7}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3206:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3207:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice004:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){8,8}+ARR(B){9,9}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3208:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3209:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice005:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){10,10}+ARR(B){11,11}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3210:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3211:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice006:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){12,12}+ARR(B){13,13}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3212:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3213:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice007:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){14,14}+ARR(B){15,15}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3214:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3215:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice008:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){16,16}+ARR(B){17,17}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3216:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3217:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice009:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){18,18}+ARR(B){19,19}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3218:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3219:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice010:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){20,20}+ARR(B){21,21}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3220:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3221:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice011:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){22,22}+ARR(B){23,23}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3222:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3223:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice012:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){24,24}+ARR(B){25,25}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3224:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3225:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice013:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){26,26}+ARR(B){27,27}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3226:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3227:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice014:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){28,28}+ARR(B){29,29}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3228:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3229:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Slice015:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "ARR(A){30,30}+ARR(B){31,31}") # limit 36 char
  field(INPA, "ZaPHD:VacuumPLC:ForceCoil3230:Write")
  field(INPB, "ZaPHD:VacuumPLC:ForceCoil3231:Write")
}
record(acalcout, "DL:ZaPHDVac:Waveform:Merge00:Calc"){
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "AA+BB+CC+DD+EE+FF+GG+HH+II+JJ+KK+LL") # 36 char limit
  field(INAA, "DL:ZaPHDVac:Waveform:Slice000:Calc.AVAL")
  field(INBB, "DL:ZaPHDVac:Waveform:Slice001:Calc.AVAL")
  field(INCC, "DL:ZaPHDVac:Waveform:Slice002:Calc.AVAL")
  field(INDD, "DL:ZaPHDVac:Waveform:Slice003:Calc.AVAL")
  field(INEE, "DL:ZaPHDVac:Waveform:Slice004:Calc.AVAL")
  field(INFF, "DL:ZaPHDVac:Waveform:Slice005:Calc.AVAL")
  field(INGG, "DL:ZaPHDVac:Waveform:Slice006:Calc.AVAL")
  field(INHH, "DL:ZaPHDVac:Waveform:Slice007:Calc.AVAL")
  field(INII, "DL:ZaPHDVac:Waveform:Slice008:Calc.AVAL")
  field(INJJ, "DL:ZaPHDVac:Waveform:Slice009:Calc.AVAL")
  field(INKK, "DL:ZaPHDVac:Waveform:Slice010:Calc.AVAL")
  field(INLL, "DL:ZaPHDVac:Waveform:Slice011:Calc.AVAL")
}

record(acalcout, "DL:ZaPHDVac:Waveform:Merge01:Calc"){
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "AA+BB+CC+DD") # 36 char limit
  field(INAA, "DL:ZaPHDVac:Waveform:Slice012:Calc.AVAL")
  field(INBB, "DL:ZaPHDVac:Waveform:Slice013:Calc.AVAL")
  field(INCC, "DL:ZaPHDVac:Waveform:Slice014:Calc.AVAL")
  field(INDD, "DL:ZaPHDVac:Waveform:Slice015:Calc.AVAL")
}

record(acalcout, "DL:ZaPHDVac:Waveform:2ndMerge00:Calc"){
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "AA+BB") # 36 char limit
  field(INAA, "DL:ZaPHDVac:Waveform:Merge00:Calc.AVAL")
  field(INBB, "DL:ZaPHDVac:Waveform:Merge01:Calc.AVAL")
}

record(acalcout, "DL:ZaPHDVac:Waveform:Output:Calc") {
  field(SCAN, ".1 second")
  field(NELM,  32)
  field(CALC, "AA")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(OUT,  "DL:ZaPHDVac:CnOutWArray.VAL PP NMS")
  field(INAA, "DL:ZaPHDVac:Waveform:2ndMerge00:Calc.AVAL")
}
